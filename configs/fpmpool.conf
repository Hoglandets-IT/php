[global]
; Log error output to stderr
error_log = /dev/stderr

[www]
; Set the user and group to run the PHP-FPM process as
user = nobody
group = nobody

; Set the path to the FPM-socket to create for Nginx to connect to
listen = /run/php-fpm.sock

; Enable status page for container health checks
pm.status_path = /fpm-status

; This will only start the PHP-FPM process once a request comes in
; minimizing idle processes for cluster optimization
pm = ondemand

; We generally shouldn't need to limit this since the container 
; platform has support for resource allocation limits
pm.max_children = 100

; The number of seconds to wait before killing an idle child process
pm.process_idle_timeout = 60s;

; Maximum number of requests a child can serve without being recycled
; This is useful to avoid memory leaks in 3rd party libraries
pm.max_requests = 1000

; Make sure the FPM workers can reach the environment variables for configuration
clear_env = no

; Catch output from PHP
catch_workers_output = yes

; Remove the 'child 10 said into stderr' prefix in the log and only show the actual message
decorate_workers_output = no

; Enable ping page to use in healthcheck
ping.path = /fpm-ping

; Disable expose PHP and set timezone
php_admin_value[date.timezone] = "UTC"
php_admin_value[expose_php] = Off
