worker_processes auto;
error_log stderr warn;
pid /run/nginx.pid;

events {
    ##WORKER_CONNECTIONS##
    worker_connections 1024;
    ##WORKER_CONNECTIONS##
}

http {
    # Include mime types to be served by the webserver and set the default type
    include mime.types;
    default_type application/octet-stream;

    # Define a custom log format to include upstream response time
    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    # Send all logs to docker stdout/stderr
    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    # Set the keepalive timeout for connections
    keepalive_timeout 65;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Define the listener for the default server
    server {
        listen [::]:8080 default_server;
        listen 8080 default_server;
        server_name _;

        # Serve static files via buffer instead of directly to stream
        sendfile off;
        tcp_nodelay on;

        # Disable absolute redirects 
        absolute_redirect off;

        # Define application root and index files
        root /app/public;
        index index.php index.html;

        # Before serving PHP, ensure that there are no static files or folders present at the given location
        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?q=$uri&$args;
        }

        # Set error page for 50x errors to the Nginx default
        # then, specify the root folder for the error page
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        # If no static files are found, serve the PHP application
        location ~ \.php$ {
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_read_timeout 300;
            include fastcgi_params;
            try_files /index.php =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/run/php-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # Set sane caching policy for static files and enable gzip compression
        location ~* \.(jpg|jpeg|webp|gif|png|css|js|ico|xml)$ {
            expires 5d;
        }

        # Compression level (1-9)
        gzip_comp_level     5;

        # Don't compress anything under 256 bytes
        gzip_min_length     256;

        # Compress output of these MIME-types
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/rss+xml
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-font-opentype
            application/x-font-truetype
            application/x-javascript
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/eot
            font/opentype
            font/otf
            image/svg+xml
            image/x-icon
            image/vnd.microsoft.icon
            text/css
            text/plain
            text/javascript
            text/x-component;

        # Disable gzip for bad browsers
        gzip_disable  "MSIE [1-6]\.(?!.*SV1)";

        # Ensure that all access to .x-files is forbidden
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # Set endpoint for FPM status page
        location ~ ^/(fpm-status|fpm-ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass unix:/run/php-fpm.sock;
        }
    }

    # Obfuscate sensitive headers by default
    proxy_hide_header X-Powered-By;
    fastcgi_hide_header X-Powered-By;
    server_tokens off;
    
    # Set minimal headers for security
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # Include any other custom configurations
    include /etc/nginx/modules/*.conf;
}